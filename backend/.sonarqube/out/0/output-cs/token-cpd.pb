¥
YD:\Facultate\.net\Proiect\LabsAndCourseManagement\backend\LabsAndCourses.Domain\Course.cs
	namespace 	$
LabsAndCoursesManagement
 "
." #
Domain# )
{ 
public 

class 
Course 
{ 
public 
Course 
( 
string 
title #
,# $
int% (
semester) 1
,1 2
int3 6
credits7 >
)> ?
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
Title		 
=		 
title		 
;		 
Semester

 
=

 
semester

 
;

  
Credits 
= 
credits 
; 
} 	
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
string 
Title 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
int 
Semester 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
int 
Credits 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
void 
Update 
( 
Course !
updatedCourse" /
)/ 0
{ 	
Title 
= 
updatedCourse !
.! "
Title" '
;' (
Semester 
= 
updatedCourse $
.$ %
Semester% -
;- .
Credits 
= 
updatedCourse #
.# $
Credits$ +
;+ ,
} 	
} 
} Ï
[D:\Facultate\.net\Proiect\LabsAndCourseManagement\backend\LabsAndCourses.Domain\Didactic.cs
	namespace 	$
LabsAndCoursesManagement
 "
." #
Domain# )
{ 
public 

class 
Didactic 
{ 
public 
Didactic 
( 
) 
{ 	
Id		 
=		 
Guid		 
.		 
NewGuid		 
(		 
)		 
;		  
}

 	
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
Guid 
	TeacherId 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
Guid 
CourseId 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
void "
AttachDidacticToCourse *
(* +
Course+ 1
course2 8
)8 9
{ 	
CourseId 
= 
course 
. 
Id  
;  !
} 	
public 
void #
AttachDidacticToTeacher +
(+ ,
Teacher, 3
teacher4 ;
); <
{ 	
	TeacherId 
= 
teacher 
.  
Id  "
;" #
} 	
} 
} ø
XD:\Facultate\.net\Proiect\LabsAndCourseManagement\backend\LabsAndCourses.Domain\Grade.cs
	namespace 	$
LabsAndCoursesManagement
 "
." #
Domain# )
{ 
public 

class 
Grade 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
Guid 
	StudentId 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
Guid 
CourseId 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
int 
Value 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
public 
DateTime 
	GradeDate !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
public 
bool 

IsLabGrade 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
bool 
IsExamGrade 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
Grade 
( 
int 
value 
, 
DateTime  (
	gradeDate) 2
,2 3
bool4 8

isLabGrade9 C
,C D
boolE I
isExamGradeJ U
)U V
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
Value 
= 
value 
; 
	GradeDate 
= 
	gradeDate !
;! "

IsLabGrade 
= 

isLabGrade #
;# $
IsExamGrade 
= 
isExamGrade %
;% &
} 	
public 
void 
AttachGradeToCourse '
(' (
Course( .
course/ 5
)5 6
{ 	
CourseId 
= 
course 
. 
Id  
;  !
} 	
public   
void    
AttachGradeToStudent   (
(  ( )
Student  ) 0
student  1 8
)  8 9
{!! 	
	StudentId"" 
="" 
student"" 
.""  
Id""  "
;""" #
}## 	
public&& 
void&& 
Update&& 
(&& 
Grade&&  
updatedGrade&&! -
)&&- .
{'' 	
Value(( 
=(( 
updatedGrade((  
.((  !
Value((! &
;((& '
	GradeDate)) 
=)) 
updatedGrade)) $
.))$ %
	GradeDate))% .
;)). /

IsLabGrade** 
=** 
updatedGrade** %
.**% &

IsLabGrade**& 0
;**0 1
IsExamGrade++ 
=++ 
updatedGrade++ &
.++& '
IsExamGrade++' 2
;++2 3
},, 	
}-- 
}.. §
aD:\Facultate\.net\Proiect\LabsAndCourseManagement\backend\LabsAndCourses.Domain\Helpers\Result.cs
	namespace 	$
LabsAndCoursesManagement
 "
." #
Domain# )
.) *
Helpers* 1
{ 
public 

class 
Result 
{ 
public 
string 
Error 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
bool 
	IsSuccess 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
bool 
	IsFailure 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public

 
static

 
Result

 
Success

 $
(

$ %
)

% &
{ 	
return 
new 
Result 
{ 
	IsSuccess  )
=* +
true, 0
}1 2
;2 3
} 	
public 
static 
Result 
Failure $
($ %
string% +
error, 1
)1 2
{ 	
return 
new 
Result 
{ 
	IsFailure 
= 
true  
,  !
Error 
= 
error 
} 
; 
} 	
} 
} â%
ZD:\Facultate\.net\Proiect\LabsAndCourseManagement\backend\LabsAndCourses.Domain\Student.cs
	namespace 	$
LabsAndCoursesManagement
 "
." #
Domain# )
{ 
public 

class 
Student 
{ 
public		 
Student		 
(		 
string		 
email		 $
,		$ %
string		& ,
	firstName		- 6
,		6 7
string		8 >
lastName		? G
,		G H
int		I L
semester		M U
,		U V
string		W ]
group		^ c
,		c d
int		e h
?		h i
scholarship		j u
)		u v
{

 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
Email 
= 
email 
; 
	FirstName 
= 
	firstName !
;! "
LastName 
= 
lastName 
;  
Semester 
= 
semester 
;  
Group 
= 
group 
; 
Scholarship 
= 
scholarship %
;% &
} 	
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
string 
Email 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
string 
	FirstName 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
string 
LastName 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
int 
Semester 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
string 
Group 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
int 
? 
Scholarship 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
List 
< 
Grade 
> 
Grades !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
=8 9
new: =
List> B
<B C
GradeC H
>H I
(I J
)J K
;K L
public 
Result #
RegisterGradesToStudent -
(- .
List. 2
<2 3
Grade3 8
>8 9
grades: @
)@ A
{ 	
if 
( 
! 
grades 
. 
Any 
( 
) 
) 
{ 
return   
Result   
.   
Failure   %
(  % &
$str  & K
)  K L
;  L M
}!! 
grades"" 
."" 
ForEach"" 
("" 
g"" 
=>"" 
{## 
g$$ 
.$$  
AttachGradeToStudent$$ &
($$& '
this$$' +
)$$+ ,
;$$, -
Grades%% 
.%% 
Add%% 
(%% 
g%% 
)%% 
;%% 
}&& 
)&& 
;&& 
return'' 
Result'' 
.'' 
Success'' !
(''! "
)''" #
;''# $
}(( 	
public++ 
void++ 
Update++ 
(++ 
Student++ "
updatedStudent++# 1
)++1 2
{,, 	
Email-- 
=-- 
updatedStudent-- "
.--" #
Email--# (
;--( )
	FirstName.. 
=.. 
updatedStudent.. &
...& '
	FirstName..' 0
;..0 1
LastName// 
=// 
updatedStudent// %
.//% &
LastName//& .
;//. /
Semester00 
=00 
updatedStudent00 %
.00% &
Semester00& .
;00. /
Group11 
=11 
updatedStudent11 "
.11" #
Group11# (
;11( )
Scholarship22 
=22 
updatedStudent22 (
.22( )
Scholarship22) 4
;224 5
}33 	
}44 
}55 
ZD:\Facultate\.net\Proiect\LabsAndCourseManagement\backend\LabsAndCourses.Domain\Teacher.cs
	namespace 	$
LabsAndCoursesManagement
 "
." #
Domain# )
{ 
public 

class 
Teacher 
{ 
public 
Teacher 
( 
string 
	firstName (
,( )
string* 0
lastName1 9
,9 :
string; A
emailB G
,G H
stringI O
teachingDegreeP ^
)^ _
{		 	
Id

 
=

 
Guid

 
.

 
NewGuid

 
(

 
)

 
;

  
	FirstName 
= 
	firstName !
;! "
LastName 
= 
lastName 
;  
Email 
= 
email 
; 
TeachingDegree 
= 
teachingDegree +
;+ ,
} 	
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
string 
	FirstName 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
string 
LastName 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
string 
Email 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
string 
TeachingDegree $
{% &
get' *
;* +
private, 3
set4 7
;7 8
}9 :
public 
void 
Update 
( 
Teacher "
updatedTeacher# 1
)1 2
{ 	
	FirstName 
= 
updatedTeacher &
.& '
	FirstName' 0
;0 1
LastName 
= 
updatedTeacher %
.% &
LastName& .
;. /
Email 
= 
updatedTeacher "
." #
Email# (
;( )
TeachingDegree 
= 
updatedTeacher +
.+ ,
TeachingDegree, :
;: ;
} 	
}   
}!! 