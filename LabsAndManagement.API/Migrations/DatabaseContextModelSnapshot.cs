// <auto-generated />
using LabsAndManagement.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabsAndManagement.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("LabsAndManagement.Business.Course", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NoCredits")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = ".net",
                            NoCredits = 4
                        });
                });

            modelBuilder.Entity("LabsAndManagement.Business.Lab", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Labs");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CourseId = "1"
                        });
                });

            modelBuilder.Entity("LabsAndManagement.Business.Student", b =>
                {
                    b.Property<string>("NumarMatricol")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<char>("InitialaTata")
                        .HasColumnType("TEXT");

                    b.Property<string>("LabId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NumarMatricol");

                    b.HasIndex("CourseId");

                    b.HasIndex("LabId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            NumarMatricol = "34324RSE123123",
                            CourseId = "1",
                            InitialaTata = 'C',
                            LabId = "1",
                            Nume = "Pavel",
                            Prenume = "Petronel"
                        });
                });

            modelBuilder.Entity("LabsAndManagement.Business.Lab", b =>
                {
                    b.HasOne("LabsAndManagement.Business.Course", "Course")
                        .WithMany("Labs")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LabsAndManagement.Business.Student", b =>
                {
                    b.HasOne("LabsAndManagement.Business.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabsAndManagement.Business.Lab", "Lab")
                        .WithMany()
                        .HasForeignKey("LabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Lab");
                });

            modelBuilder.Entity("LabsAndManagement.Business.Course", b =>
                {
                    b.Navigation("Labs");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
